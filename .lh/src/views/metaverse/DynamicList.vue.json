{
    "sourceFile": "src/views/metaverse/DynamicList.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1654498242690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1654498253182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,254 @@\n+<template>\n+<!-- 柱状图 -->\n+  <div class=\"Woman\" >\n+    <el-row type=\"flex\" justify=\"center\" style=\"margin-top:40px;\">\n+       <el-col :span=\"24\">\n+            <h3 class=\"title\">\n+                混合性能度量\n+            </h3>\n+      </el-col>\n+   </el-row>\n+   <el-row type=\"flex\" justify=\"center\" >\n+       <el-col :span=\"24\">\n+            <div id=\"xingneng\" :data=\"option11\" :style=\"{ minwidth: '340px', minHeight: '800px'}\"></div>\n+      </el-col>\n+   </el-row>\n+   </div>\n+</template>\n+\n+<script>\n+// 引入echarts\n+import * as echarts from \"echarts\";\n+import { onMounted } from \"vue\";\n+\n+import {\n+  DatasetComponent,\n+  TitleComponent,\n+  TooltipComponent,\n+  GridComponent,\n+  VisualMapComponent,\n+  LegendComponent,\n+  TransformComponent\n+} from 'echarts/components';\n+import { ScatterChart, LineChart } from 'echarts/charts';\n+import { UniversalTransition, LabelLayout } from 'echarts/features';\n+import { CanvasRenderer } from 'echarts/renderers';\n+import {transform} from 'echarts-stat';\n+\n+echarts.use([\n+  DatasetComponent,\n+  TitleComponent,\n+  TooltipComponent,\n+  GridComponent,\n+  VisualMapComponent,\n+  LegendComponent,\n+  TransformComponent,\n+  ScatterChart,\n+  LineChart,\n+  CanvasRenderer,\n+  UniversalTransition,\n+  LabelLayout\n+]);\n+ echarts.registerTransform(ecStat.transform.regression);\n+import ecStat from 'echarts-stat';\n+\n+export default {\n+     setup() {\n+  \n+        onMounted(() => {\n+                    // See https://github.com/ecomfe/echarts-stat\n+                   \n+                    var option11 = {\n+                    dataset: [\n+                        {\n+                        source: [\n+                            [28604, 77, 17096869, 'Australia', '虚拟人'],\n+                            [31163, 77.4, 27662440, 'Canada', '虚拟人'],\n+                            [1516, 68, 1154605773, 'China', '虚拟人'],\n+                            [13670, 74.7, 10582082, 'Cuba', '虚拟人'],\n+                            [28599, 75, 4986705, 'Finland', '虚拟人'],\n+                            [29476, 77.1, 56943299, 'France', '虚拟人'],\n+                            [31476, 75.4, 78958237, 'Germany', '虚拟人'],\n+                            [28666, 78.1, 254830, 'Iceland', '虚拟人'],\n+                            [1777, 57.7, 870601776, 'India', '虚拟人'],\n+                            [29550, 79.1, 122249285, 'Japan', '虚拟人'],\n+                            [2076, 67.9, 20194354, 'North Korea', '虚拟人'],\n+                            [12087, 72, 42972254, 'South Korea', '虚拟人'],\n+                            [24021, 75.4, 3397534, 'New Zealand', '虚拟人'],\n+                            [43296, 76.8, 4240375, 'Norway', '虚拟人'],\n+                            [10088, 70.8, 38195258, 'Poland', '虚拟人'],\n+                            [19349, 69.6, 147568552, 'Russia', '虚拟人'],\n+                            [10670, 67.3, 53994605, 'Turkey', '虚拟人'],\n+                            [26424, 75.7, 57110117, 'United Kingdom', '虚拟人'],\n+                            [37062, 75.4, 252847810, 'United States', '虚拟人'],\n+                            [44056, 81.8, 23968973, 'Australia', '机器人'],\n+                            [43294, 81.7, 35939927, 'Canada', '机器人'],\n+                            [13334, 76.9, 1376048943, 'China', '机器人'],\n+                            [21291, 78.5, 11389562, 'Cuba', '机器人'],\n+                            [38923, 80.8, 5503457, 'Finland', '机器人'],\n+                            [37599, 81.9, 64395345, 'France', '机器人'],\n+                            [44053, 81.1, 80688545, 'Germany', '机器人'],\n+                            [42182, 82.8, 329425, 'Iceland', '机器人'],\n+                            [5903, 66.8, 1311050527, 'India', '机器人'],\n+                            [36162, 83.5, 126573481, 'Japan', '机器人'],\n+                            [1390, 71.4, 25155317, 'North Korea', '机器人'],\n+                            [34644, 80.7, 50293439, 'South Korea', '机器人'],\n+                            [34186, 80.6, 4528526, 'New Zealand', '机器人'],\n+                            [64304, 81.6, 5210967, 'Norway', '机器人'],\n+                            [24787, 77.3, 38611794, 'Poland', '机器人'],\n+                            [23038, 73.13, 143456918, 'Russia', '机器人'],\n+                            [19360, 76.5, 78665830, 'Turkey', '机器人'],\n+                            [38225, 81.4, 64715810, 'United Kingdom', '机器人'],\n+                            [53354, 79.1, 321773631, 'United States', '机器人']\n+                        ]\n+                        },\n+                        {\n+                        transform: {\n+                            type: 'filter',\n+                            config: { dimension: 4, eq: '虚拟人' }\n+                        }\n+                        },\n+                        {\n+                        transform: {\n+                            type: 'filter',\n+                            config: { dimension: 4, eq: '机器人' }\n+                        }\n+                        },\n+                        {\n+                        transform: {\n+                            type: 'ecStat:regression',\n+                            config: {\n+                            method: 'logarithmic'\n+                            }\n+                        }\n+                        }\n+                    ],\n+                    title: {\n+                        text: '虚拟人和机器人性能指标和能耗总值',\n+                        subtext: '',\n+                        sublink: 'https://github.com/ecomfe/echarts-stat',\n+                        left: 'center',\n+                        textStyle:{\n+                                color: \"#617dd3\",\n+                                fontSize:30,\n+\n+                            }\n+                       \n+                    },\n+                    legend: {//图例\n+                        data: ['虚拟人', '机器人'],\n+                        bottom: 10,\n+                        textStyle:{\n+                                color: [\"#617dd3\",'#addd8b'],\n+                                fontSize:30,\n+\n+                            }\n+                        \n+                    },\n+                    tooltip: {\n+                        trigger: 'axis',\n+                        axisPointer: {\n+                        type: 'cross'\n+                        }\n+                    },\n+                    xAxis: {\n+                        type: 'value',\n+                         axisLine: {//y轴坐标颜色设置\n+                            lineStyle: {\n+                                    color: '#fff',\n+                                    width: 1, //这里是为了突出显示加上的 \n+                                    \n+                                }\n+                            },\n+                        },\n+                        textStyle:{\n+                            fontSize:20,\n+\n+                        },\n+                        splitLine: {\n+                        lineStyle: {\n+                            type: 'dashed',\n+                            color: '#ffffff'\n+                        },\n+                       \n+                    },\n+                    yAxis: {\n+                        type: 'value',\n+                        splitLine: {\n+                        lineStyle: {\n+                            type: 'dashed',\n+                            fontSize:20\n+                        }\n+                        },\n+                        axisLine: {//y轴坐标颜色设置\n+                            lineStyle: {\n+                                    color: '#fff',\n+                                    width: 1, //这里是为了突出显示加上的 \n+                                }\n+                            },\n+                    },\n+                    visualMap: {\n+                        show: false,\n+                        dimension: 2,\n+                        min: 20000,\n+                        max: 1500000000,\n+                        seriesIndex: [0, 1],\n+         \n+                        inRange: {\n+                        symbolSize: [10, 70]\n+                        }\n+                    },\n+                    series: [\n+                        {\n+                        name: '虚拟人',\n+                        type: 'scatter',\n+                        datasetIndex: 1\n+                        },\n+                        {\n+                        name: '机器人',\n+                        type: 'scatter',\n+                        datasetIndex: 2\n+                        },\n+                        {\n+                        name: 'line',\n+                        type: 'line',\n+                        smooth: true,\n+                        datasetIndex: 3,\n+                        symbolSize: 0.1,\n+                        symbol: 'circle',\n+                        label: { show: true, fontSize: 25, color:'#f8cc6b' },\n+                        labelLayout: { dx: -20 },\n+                        encode: { label: 2, tooltip: 1 }\n+                        }\n+                    ]\n+                    };\n+\n+                    //初始化图表\n+                  // let myChart = echarts.init(document.getElementById(\"myChart123\"));\n+                  let myChart = echarts.init(document.getElementById(\"xingneng\"));\n+                  //指定配置项和数据显示\n+                  // myChart.setOption(option);\n+                  myChart.setOption(option11);  \n+                \n+                  //全局设置Echrts - 根据窗口的大小变更图表\n+                  window.onresize = function () {\n+                    // 自适应大小\n+                  myChart.resize();\n+                  };  \n+                   \n+                     \n+        });\n+     },\n+};\n+</script>\n+\n+<style scoped>\n+.title{\n+    font-size:44px;\n+    font-family: \"微软雅黑\";\n+    color:rgb(239, 250, 248);\n+    line-height: 1.3;\n+    display: flex;\n+    justify-content:center;\n+}\n+</style>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1654498263854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n       </el-col>\n    </el-row>\n    <el-row type=\"flex\" justify=\"center\" >\n        <el-col :span=\"24\">\n-            <div id=\"xingneng\" :data=\"option11\" :style=\"{ minwidth: '340px', minHeight: '800px'}\"></div>\n+            <div id=\"5getu\" :data=\"option15\" :style=\"{ minwidth: '340px', minHeight: '800px'}\"></div>\n       </el-col>\n    </el-row>\n    </div>\n </template>\n"
                },
                {
                    "date": 1654498278629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n                   // let myChart = echarts.init(document.getElementById(\"myChart123\"));\n                   let myChart = echarts.init(document.getElementById(\"xingneng\"));\n                   //指定配置项和数据显示\n                   // myChart.setOption(option);\n-                  myChart.setOption(option11);  \n+                  myChart.setOption(option15);  \n                 \n                   //全局设置Echrts - 根据窗口的大小变更图表\n                   window.onresize = function () {\n                     // 自适应大小\n"
                },
                {
                    "date": 1654498285589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n                     };\n \n                     //初始化图表\n                   // let myChart = echarts.init(document.getElementById(\"myChart123\"));\n-                  let myChart = echarts.init(document.getElementById(\"xingneng\"));\n+                  let myChart = echarts.init(document.getElementById(\"5getu\"));\n                   //指定配置项和数据显示\n                   // myChart.setOption(option);\n                   myChart.setOption(option15);  \n                 \n"
                },
                {
                    "date": 1654498771173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,40 +19,29 @@\n <script>\n // 引入echarts\n import * as echarts from \"echarts\";\n import { onMounted } from \"vue\";\n-\n import {\n   DatasetComponent,\n-  TitleComponent,\n   TooltipComponent,\n-  GridComponent,\n-  VisualMapComponent,\n-  LegendComponent,\n-  TransformComponent\n+  GridComponent\n } from 'echarts/components';\n-import { ScatterChart, LineChart } from 'echarts/charts';\n-import { UniversalTransition, LabelLayout } from 'echarts/features';\n+import { ScatterChart } from 'echarts/charts';\n+import { UniversalTransition } from 'echarts/features';\n import { CanvasRenderer } from 'echarts/renderers';\n-import {transform} from 'echarts-stat';\n+import { Scatter3DChart } from 'echarts-gl/charts';\n+import { Grid3DComponent } from 'echarts-gl/components';\n \n echarts.use([\n   DatasetComponent,\n-  TitleComponent,\n   TooltipComponent,\n   GridComponent,\n-  VisualMapComponent,\n-  LegendComponent,\n-  TransformComponent,\n   ScatterChart,\n-  LineChart,\n+  Grid3DComponent,\n+  Scatter3DChart,\n   CanvasRenderer,\n-  UniversalTransition,\n-  LabelLayout\n+  UniversalTransition\n ]);\n- echarts.registerTransform(ecStat.transform.regression);\n-import ecStat from 'echarts-stat';\n-\n export default {\n      setup() {\n   \n         onMounted(() => {\n"
                },
                {
                    "date": 1654498783928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,11 @@\n      setup() {\n   \n         onMounted(() => {\n                     // See https://github.com/ecomfe/echarts-stat\n-                   \n+                   var ROOT_PATH =\n+  'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n+\n                     var option11 = {\n                     dataset: [\n                         {\n                         source: [\n"
                },
                {
                    "date": 1654498807339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,175 +46,134 @@\n   \n         onMounted(() => {\n                     // See https://github.com/ecomfe/echarts-stat\n                    var ROOT_PATH =\n-  'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n+                   'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n-                    var option11 = {\n-                    dataset: [\n-                        {\n-                        source: [\n-                            [28604, 77, 17096869, 'Australia', '虚拟人'],\n-                            [31163, 77.4, 27662440, 'Canada', '虚拟人'],\n-                            [1516, 68, 1154605773, 'China', '虚拟人'],\n-                            [13670, 74.7, 10582082, 'Cuba', '虚拟人'],\n-                            [28599, 75, 4986705, 'Finland', '虚拟人'],\n-                            [29476, 77.1, 56943299, 'France', '虚拟人'],\n-                            [31476, 75.4, 78958237, 'Germany', '虚拟人'],\n-                            [28666, 78.1, 254830, 'Iceland', '虚拟人'],\n-                            [1777, 57.7, 870601776, 'India', '虚拟人'],\n-                            [29550, 79.1, 122249285, 'Japan', '虚拟人'],\n-                            [2076, 67.9, 20194354, 'North Korea', '虚拟人'],\n-                            [12087, 72, 42972254, 'South Korea', '虚拟人'],\n-                            [24021, 75.4, 3397534, 'New Zealand', '虚拟人'],\n-                            [43296, 76.8, 4240375, 'Norway', '虚拟人'],\n-                            [10088, 70.8, 38195258, 'Poland', '虚拟人'],\n-                            [19349, 69.6, 147568552, 'Russia', '虚拟人'],\n-                            [10670, 67.3, 53994605, 'Turkey', '虚拟人'],\n-                            [26424, 75.7, 57110117, 'United Kingdom', '虚拟人'],\n-                            [37062, 75.4, 252847810, 'United States', '虚拟人'],\n-                            [44056, 81.8, 23968973, 'Australia', '机器人'],\n-                            [43294, 81.7, 35939927, 'Canada', '机器人'],\n-                            [13334, 76.9, 1376048943, 'China', '机器人'],\n-                            [21291, 78.5, 11389562, 'Cuba', '机器人'],\n-                            [38923, 80.8, 5503457, 'Finland', '机器人'],\n-                            [37599, 81.9, 64395345, 'France', '机器人'],\n-                            [44053, 81.1, 80688545, 'Germany', '机器人'],\n-                            [42182, 82.8, 329425, 'Iceland', '机器人'],\n-                            [5903, 66.8, 1311050527, 'India', '机器人'],\n-                            [36162, 83.5, 126573481, 'Japan', '机器人'],\n-                            [1390, 71.4, 25155317, 'North Korea', '机器人'],\n-                            [34644, 80.7, 50293439, 'South Korea', '机器人'],\n-                            [34186, 80.6, 4528526, 'New Zealand', '机器人'],\n-                            [64304, 81.6, 5210967, 'Norway', '机器人'],\n-                            [24787, 77.3, 38611794, 'Poland', '机器人'],\n-                            [23038, 73.13, 143456918, 'Russia', '机器人'],\n-                            [19360, 76.5, 78665830, 'Turkey', '机器人'],\n-                            [38225, 81.4, 64715810, 'United Kingdom', '机器人'],\n-                            [53354, 79.1, 321773631, 'United States', '机器人']\n-                        ]\n-                        },\n-                        {\n-                        transform: {\n-                            type: 'filter',\n-                            config: { dimension: 4, eq: '虚拟人' }\n-                        }\n-                        },\n-                        {\n-                        transform: {\n-                            type: 'filter',\n-                            config: { dimension: 4, eq: '机器人' }\n-                        }\n-                        },\n-                        {\n-                        transform: {\n-                            type: 'ecStat:regression',\n-                            config: {\n-                            method: 'logarithmic'\n-                            }\n-                        }\n-                        }\n-                    ],\n-                    title: {\n-                        text: '虚拟人和机器人性能指标和能耗总值',\n-                        subtext: '',\n-                        sublink: 'https://github.com/ecomfe/echarts-stat',\n-                        left: 'center',\n-                        textStyle:{\n-                                color: \"#617dd3\",\n-                                fontSize:30,\n+                   $.get(\n+  ROOT_PATH + '/data/asset/data/life-expectancy-table.json',\n+  function (data) {\n+    var sizeValue = '57%';\n+    var symbolSize = 2.5;\n+    option = {\n+      tooltip: {},\n+      grid3D: {\n+        width: '50%'\n+      },\n+      xAxis3D: {},\n+      yAxis3D: {},\n+      zAxis3D: {},\n+      grid: [\n+        { left: '50%', width: '20%', bottom: sizeValue },\n+        { left: '75%', width: '20%', bottom: sizeValue },\n+        { left: '50%', width: '20%', top: sizeValue },\n+        { left: '75%', width: '20%', top: sizeValue }\n+      ],\n+      xAxis: [\n+        {\n+          type: 'value',\n+          gridIndex: 0,\n+          name: 'Income',\n+          axisLabel: { rotate: 50, interval: 0 }\n+        },\n+        {\n+          type: 'category',\n+          gridIndex: 1,\n+          name: 'Country',\n+          boundaryGap: false,\n+          axisLabel: { rotate: 50, interval: 0 }\n+        },\n+        {\n+          type: 'value',\n+          gridIndex: 2,\n+          name: 'Income',\n+          axisLabel: { rotate: 50, interval: 0 }\n+        },\n+        {\n+          type: 'value',\n+          gridIndex: 3,\n+          name: 'Life Expectancy',\n+          axisLabel: { rotate: 50, interval: 0 }\n+        }\n+      ],\n+      yAxis: [\n+        { type: 'value', gridIndex: 0, name: 'Life Expectancy' },\n+        { type: 'value', gridIndex: 1, name: 'Income' },\n+        { type: 'value', gridIndex: 2, name: 'Population' },\n+        { type: 'value', gridIndex: 3, name: 'Population' }\n+      ],\n+      dataset: {\n+        dimensions: [\n+          'Income',\n+          'Life Expectancy',\n+          'Population',\n+          'Country',\n+          { name: 'Year', type: 'ordinal' }\n+        ],\n+        source: data\n+      },\n+      series: [\n+        {\n+          type: 'scatter3D',\n+          symbolSize: 3,\n+          encode: {\n+            x: 'Population',\n+            y: 'Life Expectancy',\n+            z: 'Income',\n+            tooltip: [0, 1, 2, 3, 4]\n+          }\n+        },\n+        {\n+          type: 'scatter',\n+          symbolSize: symbolSize,\n+          xAxisIndex: 0,\n+          yAxisIndex: 0,\n+          encode: {\n+            x: 'Income',\n+            y: 'Life Expectancy',\n+            tooltip: [0, 1, 2, 3, 4]\n+          }\n+        },\n+        {\n+          type: 'scatter',\n+          symbolSize: symbolSize,\n+          xAxisIndex: 1,\n+          yAxisIndex: 1,\n+          encode: {\n+            x: 'Country',\n+            y: 'Income',\n+            tooltip: [0, 1, 2, 3, 4]\n+          }\n+        },\n+        {\n+          type: 'scatter',\n+          symbolSize: symbolSize,\n+          xAxisIndex: 2,\n+          yAxisIndex: 2,\n+          encode: {\n+            x: 'Income',\n+            y: 'Population',\n+            tooltip: [0, 1, 2, 3, 4]\n+          }\n+        },\n+        {\n+          type: 'scatter',\n+          symbolSize: symbolSize,\n+          xAxisIndex: 3,\n+          yAxisIndex: 3,\n+          encode: {\n+            x: 'Life Expectancy',\n+            y: 'Population',\n+            tooltip: [0, 1, 2, 3, 4]\n+          }\n+        }\n+      ]\n+    };\n+    myChart.setOption(option);\n+  }\n+);\n \n-                            }\n-                       \n-                    },\n-                    legend: {//图例\n-                        data: ['虚拟人', '机器人'],\n-                        bottom: 10,\n-                        textStyle:{\n-                                color: [\"#617dd3\",'#addd8b'],\n-                                fontSize:30,\n \n-                            }\n-                        \n-                    },\n-                    tooltip: {\n-                        trigger: 'axis',\n-                        axisPointer: {\n-                        type: 'cross'\n-                        }\n-                    },\n-                    xAxis: {\n-                        type: 'value',\n-                         axisLine: {//y轴坐标颜色设置\n-                            lineStyle: {\n-                                    color: '#fff',\n-                                    width: 1, //这里是为了突出显示加上的 \n-                                    \n-                                }\n-                            },\n-                        },\n-                        textStyle:{\n-                            fontSize:20,\n-\n-                        },\n-                        splitLine: {\n-                        lineStyle: {\n-                            type: 'dashed',\n-                            color: '#ffffff'\n-                        },\n-                       \n-                    },\n-                    yAxis: {\n-                        type: 'value',\n-                        splitLine: {\n-                        lineStyle: {\n-                            type: 'dashed',\n-                            fontSize:20\n-                        }\n-                        },\n-                        axisLine: {//y轴坐标颜色设置\n-                            lineStyle: {\n-                                    color: '#fff',\n-                                    width: 1, //这里是为了突出显示加上的 \n-                                }\n-                            },\n-                    },\n-                    visualMap: {\n-                        show: false,\n-                        dimension: 2,\n-                        min: 20000,\n-                        max: 1500000000,\n-                        seriesIndex: [0, 1],\n-         \n-                        inRange: {\n-                        symbolSize: [10, 70]\n-                        }\n-                    },\n-                    series: [\n-                        {\n-                        name: '虚拟人',\n-                        type: 'scatter',\n-                        datasetIndex: 1\n-                        },\n-                        {\n-                        name: '机器人',\n-                        type: 'scatter',\n-                        datasetIndex: 2\n-                        },\n-                        {\n-                        name: 'line',\n-                        type: 'line',\n-                        smooth: true,\n-                        datasetIndex: 3,\n-                        symbolSize: 0.1,\n-                        symbol: 'circle',\n-                        label: { show: true, fontSize: 25, color:'#f8cc6b' },\n-                        labelLayout: { dx: -20 },\n-                        encode: { label: 2, tooltip: 1 }\n-                        }\n-                    ]\n-                    };\n-\n                     //初始化图表\n                   // let myChart = echarts.init(document.getElementById(\"myChart123\"));\n                   let myChart = echarts.init(document.getElementById(\"5getu\"));\n                   //指定配置项和数据显示\n"
                },
                {
                    "date": 1654498818799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,129 +49,129 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-  ROOT_PATH + '/data/asset/data/life-expectancy-table.json',\n-  function (data) {\n-    var sizeValue = '57%';\n-    var symbolSize = 2.5;\n-    option = {\n-      tooltip: {},\n-      grid3D: {\n-        width: '50%'\n-      },\n-      xAxis3D: {},\n-      yAxis3D: {},\n-      zAxis3D: {},\n-      grid: [\n-        { left: '50%', width: '20%', bottom: sizeValue },\n-        { left: '75%', width: '20%', bottom: sizeValue },\n-        { left: '50%', width: '20%', top: sizeValue },\n-        { left: '75%', width: '20%', top: sizeValue }\n-      ],\n-      xAxis: [\n-        {\n-          type: 'value',\n-          gridIndex: 0,\n-          name: 'Income',\n-          axisLabel: { rotate: 50, interval: 0 }\n-        },\n-        {\n-          type: 'category',\n-          gridIndex: 1,\n-          name: 'Country',\n-          boundaryGap: false,\n-          axisLabel: { rotate: 50, interval: 0 }\n-        },\n-        {\n-          type: 'value',\n-          gridIndex: 2,\n-          name: 'Income',\n-          axisLabel: { rotate: 50, interval: 0 }\n-        },\n-        {\n-          type: 'value',\n-          gridIndex: 3,\n-          name: 'Life Expectancy',\n-          axisLabel: { rotate: 50, interval: 0 }\n-        }\n-      ],\n-      yAxis: [\n-        { type: 'value', gridIndex: 0, name: 'Life Expectancy' },\n-        { type: 'value', gridIndex: 1, name: 'Income' },\n-        { type: 'value', gridIndex: 2, name: 'Population' },\n-        { type: 'value', gridIndex: 3, name: 'Population' }\n-      ],\n-      dataset: {\n-        dimensions: [\n-          'Income',\n-          'Life Expectancy',\n-          'Population',\n-          'Country',\n-          { name: 'Year', type: 'ordinal' }\n-        ],\n-        source: data\n-      },\n-      series: [\n-        {\n-          type: 'scatter3D',\n-          symbolSize: 3,\n-          encode: {\n-            x: 'Population',\n-            y: 'Life Expectancy',\n-            z: 'Income',\n-            tooltip: [0, 1, 2, 3, 4]\n-          }\n-        },\n-        {\n-          type: 'scatter',\n-          symbolSize: symbolSize,\n-          xAxisIndex: 0,\n-          yAxisIndex: 0,\n-          encode: {\n-            x: 'Income',\n-            y: 'Life Expectancy',\n-            tooltip: [0, 1, 2, 3, 4]\n-          }\n-        },\n-        {\n-          type: 'scatter',\n-          symbolSize: symbolSize,\n-          xAxisIndex: 1,\n-          yAxisIndex: 1,\n-          encode: {\n-            x: 'Country',\n-            y: 'Income',\n-            tooltip: [0, 1, 2, 3, 4]\n-          }\n-        },\n-        {\n-          type: 'scatter',\n-          symbolSize: symbolSize,\n-          xAxisIndex: 2,\n-          yAxisIndex: 2,\n-          encode: {\n-            x: 'Income',\n-            y: 'Population',\n-            tooltip: [0, 1, 2, 3, 4]\n-          }\n-        },\n-        {\n-          type: 'scatter',\n-          symbolSize: symbolSize,\n-          xAxisIndex: 3,\n-          yAxisIndex: 3,\n-          encode: {\n-            x: 'Life Expectancy',\n-            y: 'Population',\n-            tooltip: [0, 1, 2, 3, 4]\n-          }\n-        }\n-      ]\n-    };\n-    myChart.setOption(option);\n-  }\n-);\n+                    ROOT_PATH + '/data/asset/data/life-expectancy-table.json',\n+                    function (data) {\n+                      var sizeValue = '57%';\n+                      var symbolSize = 2.5;\n+                      option = {\n+                        tooltip: {},\n+                        grid3D: {\n+                          width: '50%'\n+                        },\n+                        xAxis3D: {},\n+                        yAxis3D: {},\n+                        zAxis3D: {},\n+                        grid: [\n+                          { left: '50%', width: '20%', bottom: sizeValue },\n+                          { left: '75%', width: '20%', bottom: sizeValue },\n+                          { left: '50%', width: '20%', top: sizeValue },\n+                          { left: '75%', width: '20%', top: sizeValue }\n+                        ],\n+                        xAxis: [\n+                          {\n+                            type: 'value',\n+                            gridIndex: 0,\n+                            name: 'Income',\n+                            axisLabel: { rotate: 50, interval: 0 }\n+                          },\n+                          {\n+                            type: 'category',\n+                            gridIndex: 1,\n+                            name: 'Country',\n+                            boundaryGap: false,\n+                            axisLabel: { rotate: 50, interval: 0 }\n+                          },\n+                          {\n+                            type: 'value',\n+                            gridIndex: 2,\n+                            name: 'Income',\n+                            axisLabel: { rotate: 50, interval: 0 }\n+                          },\n+                          {\n+                            type: 'value',\n+                            gridIndex: 3,\n+                            name: 'Life Expectancy',\n+                            axisLabel: { rotate: 50, interval: 0 }\n+                          }\n+                        ],\n+                        yAxis: [\n+                          { type: 'value', gridIndex: 0, name: 'Life Expectancy' },\n+                          { type: 'value', gridIndex: 1, name: 'Income' },\n+                          { type: 'value', gridIndex: 2, name: 'Population' },\n+                          { type: 'value', gridIndex: 3, name: 'Population' }\n+                        ],\n+                        dataset: {\n+                          dimensions: [\n+                            'Income',\n+                            'Life Expectancy',\n+                            'Population',\n+                            'Country',\n+                            { name: 'Year', type: 'ordinal' }\n+                          ],\n+                          source: data\n+                        },\n+                        series: [\n+                          {\n+                            type: 'scatter3D',\n+                            symbolSize: 3,\n+                            encode: {\n+                              x: 'Population',\n+                              y: 'Life Expectancy',\n+                              z: 'Income',\n+                              tooltip: [0, 1, 2, 3, 4]\n+                            }\n+                          },\n+                          {\n+                            type: 'scatter',\n+                            symbolSize: symbolSize,\n+                            xAxisIndex: 0,\n+                            yAxisIndex: 0,\n+                            encode: {\n+                              x: 'Income',\n+                              y: 'Life Expectancy',\n+                              tooltip: [0, 1, 2, 3, 4]\n+                            }\n+                          },\n+                          {\n+                            type: 'scatter',\n+                            symbolSize: symbolSize,\n+                            xAxisIndex: 1,\n+                            yAxisIndex: 1,\n+                            encode: {\n+                              x: 'Country',\n+                              y: 'Income',\n+                              tooltip: [0, 1, 2, 3, 4]\n+                            }\n+                          },\n+                          {\n+                            type: 'scatter',\n+                            symbolSize: symbolSize,\n+                            xAxisIndex: 2,\n+                            yAxisIndex: 2,\n+                            encode: {\n+                              x: 'Income',\n+                              y: 'Population',\n+                              tooltip: [0, 1, 2, 3, 4]\n+                            }\n+                          },\n+                          {\n+                            type: 'scatter',\n+                            symbolSize: symbolSize,\n+                            xAxisIndex: 3,\n+                            yAxisIndex: 3,\n+                            encode: {\n+                              x: 'Life Expectancy',\n+                              y: 'Population',\n+                              tooltip: [0, 1, 2, 3, 4]\n+                            }\n+                          }\n+                        ]\n+                      };\n+                      myChart.setOption(option);\n+                    }\n+                  );\n \n \n                     //初始化图表\n                   // let myChart = echarts.init(document.getElementById(\"myChart123\"));\n"
                },
                {
                    "date": 1654498842680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/data/asset/data/life-expectancy-table.json',\n+                    ROOT_PATH + '/data/assets/data/life-expectancy-table.json',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       option = {\n"
                },
                {
                    "date": 1654498850558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/data/assets/data/life-expectancy-table.json',\n+                    ROOT_PATH + '/assets/data/life-expectancy-table.json',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       option = {\n"
                },
                {
                    "date": 1654498864475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/assets/data/life-expectancy-table.json',\n+                    ROOT_PATH + '../assets/data/life-expectancy-table.json',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       option = {\n"
                },
                {
                    "date": 1654499116555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                     ROOT_PATH + '../assets/data/life-expectancy-table.json',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n-                      option = {\n+                      var option = {\n                         tooltip: {},\n                         grid3D: {\n                           width: '50%'\n                         },\n"
                },
                {
                    "date": 1654499134907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n   <div class=\"Woman\" >\n     <el-row type=\"flex\" justify=\"center\" style=\"margin-top:40px;\">\n        <el-col :span=\"24\">\n             <h3 class=\"title\">\n-                混合性能度量\n+                混合性能量\n             </h3>\n       </el-col>\n    </el-row>\n    <el-row type=\"flex\" justify=\"center\" >\n@@ -53,9 +53,9 @@\n                     ROOT_PATH + '../assets/data/life-expectancy-table.json',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n-                      var option = {\n+                      var option15 = {\n                         tooltip: {},\n                         grid3D: {\n                           width: '50%'\n                         },\n"
                },
                {
                    "date": 1654499144643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n   <div class=\"Woman\" >\n     <el-row type=\"flex\" justify=\"center\" style=\"margin-top:40px;\">\n        <el-col :span=\"24\">\n             <h3 class=\"title\">\n-                混合性能量\n+                huanhe\n             </h3>\n       </el-col>\n    </el-row>\n    <el-row type=\"flex\" justify=\"center\" >\n"
                },
                {
                    "date": 1654499393315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n   <div class=\"Woman\" >\n     <el-row type=\"flex\" justify=\"center\" style=\"margin-top:40px;\">\n        <el-col :span=\"24\">\n             <h3 class=\"title\">\n-                huanhe\n+                混合性能度量\n             </h3>\n       </el-col>\n    </el-row>\n    <el-row type=\"flex\" justify=\"center\" >\n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '../assets/data/life-expectancy-table.json',\n+                    ROOT_PATH + '../a',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       var option15 = {\n"
                },
                {
                    "date": 1654499401197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '../a',\n+                    ROOT_PATH + '/assets',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       var option15 = {\n"
                },
                {
                    "date": 1654499411583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/assets',\n+                    ROOT_PATH + '/assets/da',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       var option15 = {\n"
                },
                {
                    "date": 1654499419228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/assets/da',\n+                    ROOT_PATH + '/assets/data',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       var option15 = {\n"
                },
                {
                    "date": 1654499426374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/assets/data',\n+                    ROOT_PATH + '/assets/data/life',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       var option15 = {\n"
                },
                {
                    "date": 1654499468831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                    var ROOT_PATH =\n                    'https://fastly.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\n \n                    $.get(\n-                    ROOT_PATH + '/assets/data/life',\n+                    ROOT_PATH + '/assets/data/life-expectancy-table.json',\n                     function (data) {\n                       var sizeValue = '57%';\n                       var symbolSize = 2.5;\n                       var option15 = {\n"
                },
                {
                    "date": 1654499658534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n import { CanvasRenderer } from 'echarts/renderers';\n import { Scatter3DChart } from 'echarts-gl/charts';\n import { Grid3DComponent } from 'echarts-gl/components';\n \n+\n echarts.use([\n   DatasetComponent,\n   TooltipComponent,\n   GridComponent,\n"
                },
                {
                    "date": 1654499667299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n import { UniversalTransition } from 'echarts/features';\n import { CanvasRenderer } from 'echarts/renderers';\n import { Scatter3DChart } from 'echarts-gl/charts';\n import { Grid3DComponent } from 'echarts-gl/components';\n-import\n+import 「\n \n echarts.use([\n   DatasetComponent,\n   TooltipComponent,\n"
                },
                {
                    "date": 1654501789603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n                       axisLine: {//y轴坐标颜色设置\n                             lineStyle: {\n                                     color: '#fff',\n                                     width: 1, //这里是为了突出显示加上的\n-                                      \n+                                    fo  \n                                 }\n                             },\n                     },\n                     yAxis: {\n"
                }
            ],
            "date": 1654498242689,
            "name": "Commit-0",
            "content": ""
        }
    ]
}